@mixin sliding-nav-positioning($top: 0, $right: auto, $bottom: 0, $left: 0) {
  display: flex;
  flex-direction: column;
  position: fixed;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  background: var(--clr-nav-background-color);
  z-index: $clr-sliding-panel-z-index;
  height: 100vh;
}

@mixin vertical-nav-link-colors() {
  color: var(--clr-vertical-nav-item-color);

  &.active {
    color: var(--clr-vertical-nav-item-active-color);
    background-color: var(--clr-vertical-nav-active-bg-color);

    .nav-icon {
      fill: var(--clr-vertical-nav-icon-active-color);
    }
  }
}

@mixin menu-trigger($right: auto, $left: 0, $transformX: $clr-sliding-panel-width + 0.5rem) {
  position: fixed;
  top: 0;
  right: $right;
  left: $left;
  z-index: $clr-sliding-panel-z-index;
  transform: translateX($transformX);
  transition: $clr-trigger-animation;

  &::after {
    content: none;
  }
}

.header-actions > .dropdown .dropdown-toggle.nav-icon clr-icon:not([shape^='caret']) {
  height: 1.1rem;
  width: 1.1rem;
}

.header-actions > .dropdown .dropdown-toggle.nav-icon cds-icon:not([shape^='angle']) {
  height: 1.1rem;
  width: 1.1rem;
}

@media screen and (max-width: map-get($clr-grid-breakpoints, lg)) and (min-width: map-get($clr-grid-breakpoints, md)) {
  .main-container {
    .header-hamburger-trigger,
    .header-overflow-trigger {
      display: inline-block;

      border: none;
      background: none;
      cursor: pointer;
      font-size: 1rem;
      height: var(--clr-header-height);
      width: var(--clr-header-height);
      padding: 0 0 0.2rem 0;
      //4px to vertically align the trigger lines. display flex was not working on all browsers.
      text-align: center;
      white-space: nowrap;
      color: var(--clr-header-font-color);
      opacity: var(--clr-header-nav-opacity);

      &:enabled:hover {
        opacity: var(--clr-header-nav-hover-opacity);
      }

      &:focus {
        outline-offset: -0.208333rem; //So that the outline styles aren't hidden because of the browser
      }
    }

    .header-nav.clr-nav-level-1,
    .subnav.clr-nav-level-1,
    .sub-nav.clr-nav-level-1,
    .clr-vertical-nav.clr-nav-level-1 {
      @include sliding-nav-positioning();
      transform: translateX(-1 * $clr-sliding-panel-width);
      transition: $clr-sliding-panel-animation;
    }

    .header-nav.clr-nav-level-2,
    .subnav.clr-nav-level-2,
    .sub-nav.clr-nav-level-2,
    .clr-vertical-nav.clr-nav-level-2 {
      @include sliding-nav-positioning(0, 0, 0, auto);
      transform: translateX($clr-sliding-panel-width);
      transition: $clr-sliding-panel-animation;
    }

    .subnav.clr-nav-level-1,
    .sub-nav.clr-nav-level-1,
    .subnav.clr-nav-level-2,
    .sub-nav.clr-nav-level-2 {
      .nav,
      aside {
        flex-direction: column;
        align-items: stretch;
      }

      aside {
        justify-content: center;
        width: 100%;
      }

      //Such deep nesting is unfortunately required here because we don't want
      //navs which are not subnav to behave in a similar way.
      // TODO: more specificity in classname is preferable to nesting...
      .nav {
        padding-left: 0;

        .nav-item {
          height: 1.5rem;
          margin-right: 0;
        }

        .nav-link {
          padding: 0 0.5rem 0 1rem;
          width: 100%;
          max-width: 100%;
          overflow: hidden;
          text-overflow: ellipsis;
          border-radius: var(--clr-global-borderradius) 0 0 var(--clr-global-borderradius);

          @include vertical-nav-link-colors();

          &:hover,
          &.active {
            box-shadow: none;
          }
        }
      }
    }

    .clr-vertical-nav.clr-nav-level-1,
    .clr-vertical-nav.clr-nav-level-2 {
      border-right: none;
    }

    .header-overflow-trigger {
      position: relative;

      &::after {
        display: inline-block;
        position: absolute;
        content: '';
        background: var(--clr-header-font-color);
        opacity: var(--clr-header-divider-opacity);
        height: calc(var(--clr-header-height) - 1rem);
        width: var(--clr-global-borderwidth);
        top: 0.5rem;
        left: 0;
      }
    }

    .header {
      .branding {
        max-width: 10rem;
        min-width: 0;
        overflow: hidden;
        letter-spacing: 0.16px;
      }

      .header-hamburger-trigger + .branding {
        padding-left: 0;

        //TODO: deprecate .clr-icon, .logo
        .clr-icon,
        .logo,
        clr-icon {
          display: none;
        }
      }

      .branding + .header-overflow-trigger,
      .header-nav + .header-overflow-trigger {
        margin-left: auto;
      }
    }

    &.open-hamburger-menu,
    &.open-overflow-menu {
      .header {
        .header-backdrop {
          position: fixed;
          top: 0;
          bottom: 0;
          left: 0;
          right: 0;
          background: var(--cds-alias-object-overlay-backdrop-background);
          cursor: pointer;
          z-index: $clr-sliding-panel-backdrop-z-index;
        }

        .header-nav.clr-nav-level-1,
        .header-nav.clr-nav-level-2 {
          .nav-link {
            flex: 0 0 auto;

            .nav-icon,
            .fa {
              display: none;
            }

            .nav-text {
              display: inline-block;
              color: var(--clr-sliding-panel-text-color);
              line-height: 1rem;
              padding: 0.25rem 0 0.25rem 1rem;
              white-space: normal;
              font-weight: normal;
            }

            opacity: 1;

            .nav-icon + .nav-text {
              display: inline-block;
            }

            @include vertical-nav-link-colors();

            &.active > .nav-text {
              color: inherit;
            }
          }
        }
      }

      .clr-vertical-nav .nav-trigger {
        display: none;
      }
    }

    &.open-hamburger-menu {
      .header {
        .branding {
          position: fixed;
          top: 0;
          left: 0;
          overflow: hidden;
          width: $clr-sliding-panel-width;
          max-width: $clr-sliding-panel-width;
          z-index: $clr-sliding-panel-z-index + 1;
          padding-left: 1rem;

          & > .nav-link {
            overflow: hidden;
          }

          //deprecate .clr-icon, .logo
          .clr-icon,
          .logo,
          clr-icon {
            display: inline-block;
          }

          .title {
            color: var(--clr-sliding-panel-text-color);
            text-overflow: ellipsis;
            overflow: hidden;
          }
        }
      }

      .header-hamburger-trigger {
        @include menu-trigger();

        > span {
          background: transparent;

          &::before,
          &::after {
            left: 0.15rem;
            transform-origin: 9%;
            transition: $clr-trigger-animation;
          }

          &::before {
            transform: rotate(45deg);
          }

          &::after {
            transform: rotate(-45deg);
          }
        }
      }

      .header-nav.clr-nav-level-1,
      .subnav.clr-nav-level-1,
      .sub-nav.clr-nav-level-1,
      .clr-vertical-nav.clr-nav-level-1 {
        padding-top: calc(var(--clr-header-height) + 1rem);
        transform: translateX(0);
        transition: $clr-sliding-panel-animation;
        width: $clr-sliding-panel-width;
        max-width: $clr-sliding-panel-width;

        .sidenav-content {
          padding-bottom: 1rem;
        }
      }
    }

    &.open-overflow-menu {
      .header-nav.clr-nav-level-2,
      .subnav.clr-nav-level-2,
      .sub-nav.clr-nav-level-2,
      .clr-vertical-nav.clr-nav-level-2 {
        transform: translateX(0);
        transition: $clr-sliding-panel-animation;
        width: $clr-sliding-panel-width;
        max-width: $clr-sliding-panel-width;
      }

      .header-nav.clr-nav-level-2,
      .subnav.clr-nav-level-2,
      .sub-nav.clr-nav-level-2 {
        padding-top: 1rem;
      }

      .header-overflow-trigger {
        @include menu-trigger(0, auto, (-1 * ($clr-sliding-panel-width + 0.5rem)));

        > span {
          background: transparent;

          &::before,
          &::after {
            height: 0.1rem;
            width: 1.2rem;
            left: -0.3rem;
            transform-origin: -3%;
            transition: $clr-trigger-animation;
          }

          &::before {
            transform: rotate(45deg);
          }

          &::after {
            transform: rotate(-45deg);
          }
        }
      }
    }
  }
}

.open-hamburger-menu .header-hamburger-trigger,
.open-overflow-menu .header-overflow-trigger {
  span::before {
    background-color: white;
  }

  span::after {
    background-color: white;
  }
}
