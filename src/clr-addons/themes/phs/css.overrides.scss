// The PHS theme does distinguish between primary and info colors. This is not standard in Clarity.
// We define the necessary colors and styles for all themes. By the default, the info colors will be used
// with the light and dark theme, but the PHS theme may override the definitions with a primary color.
:root [cds-theme] {
  .badge.badge-primary {
    background: var(--clr-badge-primary-bg-color);
    color: var(--clr-badge-primary-color);
  }

  // The info buttons fall back to the primary color. Since we distinghish between these two colors, we need to
  // override the info color.
  .btn.btn-info,
  .alert-app-level .alert-item .btn-info.btn,
  .btn-info .btn {
    border-color: var(--clr-btn-info-border-color);
    background-color: var(--clr-btn-info-bg-color);
    color: var(--clr-btn-info-color);
  }

  .btn-info .alert-app-level .alert-item .btn,
  .alert-app-level .alert-item .btn-info .btn {
    border-color: var(--cds-alias-typography-color-100);
    color: var(--cds-alias-typography-color-100);
  }

  .btn.btn-info:hover,
  .btn-info .btn:hover {
    background-color: var(--clr-btn-info-hover-bg-color);
    color: var(--clr-btn-info-hover-color);
  }

  .btn.btn-info:active,
  .btn-info .btn:active {
    background-color: var(--clr-btn-info-active-bg-color);
    color: var(--clr-btn-info-active-color);
  }

  .btn-outline-info .btn,
  .btn-info-outline .btn,
  .btn.btn-outline-info,
  .btn.btn-info-outline,
  .btn.btn-info-outline {
    border-color: var(--clr-btn-info-outline-border-color);
    background-color: var(--clr-btn-info-outline-bg-color);
    color: var(--clr-btn-info-outline-color);
  }

  .btn-outline-info .alert-app-level .alert-item .btn,
  .alert-app-level .alert-item .btn-outline-info .btn,
  .btn-info-outline .alert-app-level .alert-item .btn,
  .alert-app-level .alert-item .btn-info-outline .btn,
  .alert-app-level .alert-item .btn-outline-info.btn,
  .alert-app-level .alert-item .btn-info-outline.btn,
  .alert-app-level.alert-info .alert-item .btn {
    border-color: var(--cds-alias-typography-color-100);
    color: var(--cds-alias-typography-color-100);
  }

  .btn-outline-info .btn:hover,
  .btn-info-outline .btn:hover,
  .btn.btn-outline-info:hover,
  .btn.btn-info-outline:hover,
  .alert-app-level.alert-info .alert-item .btn:hover,
  .btn.btn-info-outline:hover {
    background-color: var(--clr-btn-info-outline-hover-bg-color);
    color: var(--clr-btn-info-outline-hover-color);
  }

  .btn-outline-info .btn:active,
  .btn-info-outline .btn:active,
  .btn.btn-outline-info:active,
  .btn.btn-info-outline:active,
  .alert-app-level.alert-info .alert-item .btn:active,
  .btn.btn-info-outline:active {
    background-color: var(--clr-btn-info-outline-active-bg-color);
    color: var(--clr-btn-info-outline-active-color);
  }

  .label.label-primary,
  a.label.label-primary {
    background: var(--clr-label-primary-bg-color);
    color: var(--clr-label-primary-font-color);
    border: var(--clr-label-border-width) solid var(--clr-label-primary-border-color);
  }
}

// The following overrides are not strictly linked to the PHS theme.
// They should work, even if the PHS theme is not used.
:root [cds-theme] {
  .text-primary {
    color: var(--clr-text-color-primary) !important;
  }

  .text-success {
    color: var(--clr-text-color-success) !important;
  }

  .text-info {
    color: var(--clr-text-color-info) !important;
  }

  .text-warning {
    color: var(--clr-text-color-warning) !important;
  }

  .text-danger {
    color: var(--clr-text-color-danger) !important;
  }
}

// Specific overrides for the PHS theme
:root [cds-theme~='phs'] {
  .header .header-nav .nav-link.active {
    background: var(--clr-global-selection-color);
  }

  header,
  .header {
    .header-actions {
      > .dropdown > .nav-icon > cds-icon {
        color: var(--cds-alias-status-primary);
      }

      .nav-icon > cds-icon {
        color: var(--cds-alias-status-primary);
      }

      > .dropdown > .nav-icon > clr-icon {
        color: var(--cds-alias-status-primary);
      }

      .nav-icon > clr-icon {
        color: var(--cds-alias-status-primary);
      }
    }

    .settings .nav-icon > cds-icon {
      color: var(--cds-alias-status-primary);
    }

    .settings .nav-icon > clr-icon {
      color: var(--cds-alias-status-primary);
    }

    .branding {
      min-width: 4rem;
    }
  }

  .card {
    &.selectable:hover::after,
    &.card-active::after {
      top: 0;
    }
  }

  .card-img {
    &:first-child > img {
      border-radius: var(--clr-global-borderradius) var(--clr-global-borderradius) 0 0;
    }

    &:last-child > img {
      border-radius: 0 0 var(--clr-global-borderradius) var(--clr-global-borderradius);
    }
  }

  .card.card-img,
  .card > .card-img:first-child:last-child {
    & > img {
      border-radius: var(--clr-global-borderradius);
    }
  }

  .datagrid .datagrid-table .datagrid-column {
    .datagrid-filter-toggle {
      &:hover,
      &.datagrid-filter-open {
        cds-icon {
          --color: var(--cds-alias-status-primary);
        }

        clr-icon {
          --color: var(--cds-alias-status-primary);
        }
      }
    }

    .datagrid-column-title .sort-icon {
      --color: var(--cds-alias-status-primary);
    }
  }

  .datagrid-footer .column-switch-wrapper .column-toggle--action:hover cds-icon {
    --color: var(--cds-alias-status-primary);
  }

  .datagrid-footer .column-switch-wrapper .column-toggle--action:hover clr-icon {
    --color: var(--cds-alias-status-primary);
  }

  clr-tooltip cds-icon {
    color: var(--cds-alias-status-primary);
  }

  clr-tooltip clr-icon {
    color: var(--cds-alias-status-primary);
  }

  cds-icon,
  clr-icon {
    &.is-green,
    &.is-success {
      fill: var(--cds-alias-status-success);
    }

    &.is-danger {
      fill: var(--cds-alias-status-danger);
    }

    &.is-red,
    &.is-error {
      fill: var(--cds-alias-status-danger);
    }

    &.is-warning {
      fill: var(--cds-alias-status-warning);
    }

    &.is-blue,
    &.is-info {
      fill: var(--cds-alias-status-info);
    }

    &.is-highlight {
      fill: var(--cds-alias-status-info);
    }
  }

  .clr-combobox-wrapper,
  .clr-combobox-input {
    width: 100%;
  }

  .clr-form-horizontal .clr-form-control {
    align-items: baseline;
  }

  header .settings > .dropdown > .dropdown-toggle,
  header .header-actions > .dropdown > .dropdown-toggle,
  .header .settings > .dropdown > .dropdown-toggle,
  .header .header-actions > .dropdown > .dropdown-toggle,
  .dropdown-toggle {
    gap: var(--phs-dropdown-toggle-gap, 0.1rem);
  }

  header .settings > .dropdown > .dropdown-toggle,
  header .header-actions > .dropdown > .dropdown-toggle,
  .header .settings > .dropdown > .dropdown-toggle,
  .header .header-actions > .dropdown > .dropdown-toggle {
    padding: var(--cds-global-space-8) calc(var(--cds-global-space-8) * 0.5);
  }

  header .branding .title,
  .header .branding .title {
    letter-spacing: var(--clr-header-title-letter-spacing, 0.01em);
  }

  header,
  .header {
    padding-right: var(--cds-global-space-8);
  }

  @media screen and (max-width: map-get($clr-grid-breakpoints, sm)) {
    header,
    .header {
      padding-right: 0;
    }
  }
}
