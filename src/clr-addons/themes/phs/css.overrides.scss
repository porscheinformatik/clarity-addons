[cds-theme~='phs'] {
  .header .header-nav .nav-link.active {
    background: var(--clr-global-selection-color);
  }

  header,
  .header {
    .header-actions {
      > .dropdown > .nav-icon > cds-icon {
        color: var(--turquoise-darkest);
      }

      .nav-icon > cds-icon {
        color: var(--turquoise-darkest);
      }

      > .dropdown > .nav-icon > clr-icon {
        color: var(--turquoise-darkest);
      }

      .nav-icon > clr-icon {
        color: var(--turquoise-darkest);
      }
    }

    .settings .nav-icon > cds-icon {
      color: var(--turquoise-darkest);
    }

    .settings .nav-icon > clr-icon {
      color: var(--turquoise-darkest);
    }

    .branding {
      min-width: 4rem;
    }
  }

  .card {
    &.selectable:hover::after,
    &.card-active::after {
      top: 0;
    }
  }

  .card-img {
    &:first-child > img {
      border-radius: var(--clr-card-border-radius) var(--clr-card-border-radius) 0 0;
    }

    &:last-child > img {
      border-radius: 0 0 var(--clr-card-border-radius) var(--clr-card-border-radius);
    }
  }

  .card.card-img,
  .card > .card-img:first-child:last-child {
    & > img {
      border-radius: var(--clr-card-border-radius);
    }
  }

  .datagrid .datagrid-table .datagrid-column {
    .datagrid-filter-toggle {
      &:hover,
      &.datagrid-filter-open {
        cds-icon {
          --color: var(--turquoise);
        }

        clr-icon {
          --color: var(--turquoise);
        }
      }
    }

    .datagrid-column-title .sort-icon {
      --color: var(--turquoise);
    }
  }

  .btn-warning {
    background-color: $clr-highlight-warning-800;
    border-color: $clr-highlight-warning-800;
  }

  .btn-warning:hover {
    background-color: $clr-highlight-warning-900;
    border-color: $clr-highlight-warning-900;
  }

  .btn-info {
    background-color: $clr-highlight-info-700;
    color: white;
  }

  .btn-info:hover {
    background-color: $clr-highlight-info-800;
    color: white;
  }

  .datagrid-footer .column-switch-wrapper .column-toggle--action:hover cds-icon {
    --color: var(--turquoise);
  }

  .datagrid-footer .column-switch-wrapper .column-toggle--action:hover clr-icon {
    --color: var(--turquoise);
  }

  .spinner:not(.spinner-check) {
    color: transparent;
    background: generateSpinnerIcon($black, $turquoise);

    &::before,
    &::after {
      border-color: transparent;
    }

    &.spinner-inverse {
      color: transparent;
      border-color: transparent;
      background: generateSpinnerIcon($white, $turquoise);
    }
  }

  clr-tooltip cds-icon {
    color: var(--turquoise);
  }

  clr-tooltip clr-icon {
    color: var(--turquoise);
  }

  cds-icon,
  clr-icon {
    &.is-green,
    &.is-success {
      fill: var(--clr-icon-color-success);
    }

    &.is-danger {
      fill: var(--clr-icon-color-danger);
    }

    &.is-red,
    &.is-error {
      fill: var(--clr-icon-color-error);
    }

    &.is-warning {
      fill: var(--clr-icon-color-warning);
    }

    &.is-blue,
    &.is-info {
      fill: var(--clr-icon-color-info);
    }

    &.is-highlight {
      fill: var(--clr-icon-color-highlight);
    }
  }

  // Bootstrap text color overrides
  .text-primary {
    color: var(--clr-text-color-primary) !important;
  }

  .text-success {
    color: var(--clr-text-color-success) !important;
  }

  .text-info {
    color: var(--clr-text-color-info) !important;
  }

  .text-warning {
    color: var(--clr-text-color-warning) !important;
  }

  .text-danger {
    color: var(--clr-text-color-danger) !important;
  }

  .header .header-actions > .dropdown .dropdown-toggle.nav-icon,
  .dropdown .dropdown-toggle {
    cds-icon[shape^='angle'] {
      position: absolute;
      height: 0.5rem;
      width: 0.5rem;
      right: 0.6rem;
    }

    clr-icon[shape^='caret'] {
      position: absolute;
      height: 0.5rem;
      width: 0.5rem;
      right: 0.6rem;
    }
  }

  .clr-combobox-wrapper,
  .clr-combobox-input {
    width: 100%;
  }
}
