@mixin row-indentation($level) {
  $base-cell-indentation: 0.5rem;
  $base-caret-indentation: 0.1rem;
  $indentation-increment: 1rem;

  .treetable-cell:first-of-type {
    padding-left: $base-cell-indentation + $level * $indentation-increment;
  }
  .treetable-expandable-caret {
    @if ($level > 0) {
      left: $level * $indentation-increment;
    } @else {
      left: $base-caret-indentation;
    }
  }
}

@include exports('treetable.clr-addons') {
  @include basic-table(
    '.treetable',
    '.treetable-header',
    '.treetable-body',
    '.treetable-row',
    '.treetable-column',
    '.treetable-cell'
  );

  .treetable-host {
    display: flex;
    flex-flow: column nowrap;
    position: relative;

    &.clr-treetable-noscroll .treetable {
      max-width: initial;
      width: 100%;
    }

    .treetable-header,
    .treetable-body,
    .treetable-row,
    .treetable-column,
    .treetable-cell {
      display: block;
    }

    .clr-row-clickable {
      cursor: pointer;
    }

    .treetable {
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
      -ms-overflow-style: -ms-autohiding-scrollbar;
      overflow: auto;
      height: 100%;
      margin-top: 0.5rem;

      .treetable-grid {
        display: flex;
        flex-direction: column;
        align-content: flex-start;
        width: auto;
        min-height: 3rem; // Includes header and space for a single (non existing) row
        position: relative;

        .treetable-column {
          background-color: $clr-thead-bgcolor;
          text-align: left;
          min-width: 4rem;
          flex: 1 1 0;
          vertical-align: top;

          &:last-of-type {
            padding-right: 1rem;
          }
        }

        .treetable-cell {
          flex: 1 1 auto;
          text-align: left;
          min-width: 4rem;
          border-color: $clr-table-border-color;

          &:last-of-type {
            padding-right: 1rem;
          }
        }
      }

      .treetable-expandable-caret {
        padding: calc(0.125rem - #{$clr-default-borderwidth}) $horizontalPadding 0.125rem;
        text-align: center;
        position: relative;
        z-index: 999;
        flex: 0 0 25px;
        overflow: hidden;

        .treetable-expandable-caret-button {
          @include clr-no-styles-button();
          cursor: pointer;
          height: 1.25rem;
          width: 1.25rem;
        }

        .treetable-expandable-caret-icon {
          color: $gray-dark;
          svg {
            transition: transform 0.2s ease-in-out;
          }
        }
      }

      .treetable-row-scrollable {
        display: flex;
        flex-flow: row nowrap;
      }

      .treetable-header {
        position: sticky;
        top: 0;
        // bug(popover): prevents action-overflow from being on top (first row).
        // Needed to keep select/radio and expand svgs underneath header on scrolling
        z-index: map-get($clr-layers, datagrid-header);
        min-height: 1.5rem;
        width: auto;

        .treetable-expandable-caret {
          background-color: $clr-thead-bgcolor;
          border-bottom: $clr-table-borderstyle;
        }

        &.hide-header {
          visibility: hidden;
          min-height: 0;
          height: 0;
        }
      }

      .treetable-body {
        width: auto;

        .treetable-row:hover {
          background-color: $clr-datagrid-row-hover;
        }

        .treetable-scrolling-cells {
          display: flex;
          flex: 1 1 auto;
          flex-flow: row nowrap;

          .treetable-cell {
            flex-basis: 10%;
          }
        }

        .treetable-row-wrapper {
          .clr-tt-node-content.treetable-row {
            border-top: $clr-table-borderstyle;
          }

          @include row-indentation(0);

          .treetable-row-wrapper {
            @include row-indentation(1);

            .treetable-row-wrapper {
              @include row-indentation(2);

              .treetable-row-wrapper {
                @include row-indentation(3);

                .treetable-row-wrapper {
                  @include row-indentation(4);

                  .treetable-row-wrapper {
                    @include row-indentation(5);

                    .treetable-row-wrapper {
                      @include row-indentation(6);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    &:not(.empty) .treetable-placeholder-container {
      display: none;
    }

    .treetable-placeholder-container {
      flex: 1 1 auto;
      display: flex;
      justify-content: center;
      border-top: $clr-default-borderwidth solid $clr-table-border-color;
    }

    .treetable-placeholder {
      background: $clr-table-bgcolor;
      width: 100%;

      &.treetable-empty {
        border-top: 0;
        padding: 0.5rem;
        display: flex;
        flex-flow: column nowrap;
        align-items: center;
        justify-content: center;
        justify-content: center;
        font-size: clr-getTypePropertyValueForDomElement(datagrid_placeholder, font-size);
        color: $clr-dark-midtone-gray;
      }

      .treetable-placeholder-image {
        width: 2.5rem;
        height: 2.5rem;
        margin-bottom: 0.5rem;
        background-repeat: no-repeat;
        background-size: contain;
        background-position: center;
        background-image: generateEmptyDatagridPlaceholder();
      }
    }
  }
}
